-- invariant ((((node_state[0] = 0 | node_state[0] = 1) | node_state[0] = 2) & ((node_state[1] = 0 | node_state[1] = 1) | node_state[1] = 2)) & ((node_state[2] = 0 | node_state[2] = 1) | node_state[2] = 2))  is true
-- invariant ((!((node_state[0] = 2 & node_state[1] = 2) & current_term[0] = current_term[1]) & !((node_state[0] = 2 & node_state[2] = 2) & current_term[0] = current_term[2])) & !((node_state[1] = 2 & node_state[2] = 2) & current_term[1] = current_term[2]))  is false
-- as demonstrated by the following execution sequence
Trace Description: AG alpha Counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    node_state[0] = 2
    node_state[1] = 0
    node_state[2] = 0
    current_term[0] = 0
    current_term[1] = 0
    current_term[2] = 0
    voted_for[0] = 0
    voted_for[1] = 0
    voted_for[2] = 0
    vote_granted[0][0] = FALSE
    vote_granted[0][1] = FALSE
    vote_granted[0][2] = FALSE
    vote_granted[1][0] = FALSE
    vote_granted[1][1] = FALSE
    vote_granted[1][2] = FALSE
    vote_granted[2][0] = FALSE
    vote_granted[2][1] = FALSE
    vote_granted[2][2] = FALSE
    timeout[0] = FALSE
    timeout[1] = FALSE
    timeout[2] = FALSE
    rec_vote[0] = 0
    rec_vote[1] = 0
    rec_vote[2] = 0
    heartbeat_sender = 0
    rec_heart_term[0] = 0
    rec_heart_term[1] = 0
    rec_heart_term[2] = 0
    node_active[0] = TRUE
    node_active[1] = TRUE
    node_active[2] = TRUE
    known_leader[0] = 0
    known_leader[1] = 0
    known_leader[2] = 0
    action = crash_node
    action_node = 0
    target_node = 0
    higher_term_val = 0
    majority = 2
    n = 3
  -> State: 1.2 <-
    vote_granted[0][1] = TRUE
    action = grant_vote
    target_node = 1
  -> State: 1.3 <-
    node_state[1] = 1
    current_term[1] = 1
    timeout[1] = TRUE
    action = follower_timeout
    action_node = 1
    target_node = 0
  -> State: 1.4 <-
    vote_granted[1][1] = TRUE
    rec_vote[1] = 1
    action = grant_vote
    target_node = 1
  -> State: 1.5 <-
    rec_vote[1] = 2
    action = request_vote
  -> State: 1.6 <-
    current_term[0] = 1
    current_term[2] = 1
    rec_heart_term[0] = 1
    rec_heart_term[2] = 1
    known_leader[0] = 1
    known_leader[1] = 1
    known_leader[2] = 1
    action = leader_heartbeat
  -> State: 1.7 <-
    node_state[1] = 2
    action = candidate_wins
    target_node = 0
-- invariant ((node_state[0] = 2 & node_state[1] = 2) -> current_term[0] != current_term[1])  is false
-- as demonstrated by the following execution sequence
Trace Description: AG alpha Counterexample 
Trace Type: Counterexample 
  -> State: 2.1 <-
    node_state[0] = 2
    node_state[1] = 0
    node_state[2] = 0
    current_term[0] = 0
    current_term[1] = 0
    current_term[2] = 0
    voted_for[0] = 0
    voted_for[1] = 0
    voted_for[2] = 0
    vote_granted[0][0] = FALSE
    vote_granted[0][1] = FALSE
    vote_granted[0][2] = FALSE
    vote_granted[1][0] = FALSE
    vote_granted[1][1] = FALSE
    vote_granted[1][2] = FALSE
    vote_granted[2][0] = FALSE
    vote_granted[2][1] = FALSE
    vote_granted[2][2] = FALSE
    timeout[0] = FALSE
    timeout[1] = FALSE
    timeout[2] = FALSE
    rec_vote[0] = 0
    rec_vote[1] = 0
    rec_vote[2] = 0
    heartbeat_sender = 0
    rec_heart_term[0] = 0
    rec_heart_term[1] = 0
    rec_heart_term[2] = 0
    node_active[0] = TRUE
    node_active[1] = TRUE
    node_active[2] = TRUE
    known_leader[0] = 0
    known_leader[1] = 0
    known_leader[2] = 0
    action = crash_node
    action_node = 0
    target_node = 0
    higher_term_val = 0
    majority = 2
    n = 3
  -> State: 2.2 <-
    vote_granted[0][1] = TRUE
    action = grant_vote
    target_node = 1
  -> State: 2.3 <-
    node_state[1] = 1
    current_term[1] = 1
    timeout[1] = TRUE
    action = follower_timeout
    action_node = 1
    target_node = 0
  -> State: 2.4 <-
    vote_granted[1][1] = TRUE
    rec_vote[1] = 1
    action = grant_vote
    target_node = 1
  -> State: 2.5 <-
    rec_vote[1] = 2
    action = request_vote
  -> State: 2.6 <-
    current_term[0] = 1
    current_term[2] = 1
    rec_heart_term[0] = 1
    rec_heart_term[2] = 1
    known_leader[0] = 1
    known_leader[1] = 1
    known_leader[2] = 1
    action = leader_heartbeat
  -> State: 2.7 <-
    node_state[1] = 2
    action = candidate_wins
    target_node = 0
-- invariant ((node_state[0] = 2 & node_state[2] = 2) -> current_term[0] != current_term[2])  is false
-- as demonstrated by the following execution sequence
Trace Description: AG alpha Counterexample 
Trace Type: Counterexample 
  -> State: 3.1 <-
    node_state[0] = 2
    node_state[1] = 0
    node_state[2] = 0
    current_term[0] = 0
    current_term[1] = 0
    current_term[2] = 0
    voted_for[0] = 0
    voted_for[1] = 0
    voted_for[2] = 0
    vote_granted[0][0] = FALSE
    vote_granted[0][1] = FALSE
    vote_granted[0][2] = FALSE
    vote_granted[1][0] = FALSE
    vote_granted[1][1] = FALSE
    vote_granted[1][2] = FALSE
    vote_granted[2][0] = FALSE
    vote_granted[2][1] = FALSE
    vote_granted[2][2] = FALSE
    timeout[0] = FALSE
    timeout[1] = FALSE
    timeout[2] = FALSE
    rec_vote[0] = 0
    rec_vote[1] = 0
    rec_vote[2] = 0
    heartbeat_sender = 0
    rec_heart_term[0] = 0
    rec_heart_term[1] = 0
    rec_heart_term[2] = 0
    node_active[0] = TRUE
    node_active[1] = TRUE
    node_active[2] = TRUE
    known_leader[0] = 0
    known_leader[1] = 0
    known_leader[2] = 0
    action = crash_node
    action_node = 0
    target_node = 0
    higher_term_val = 0
    majority = 2
    n = 3
  -> State: 3.2 <-
    voted_for[2] = 2
    vote_granted[2][2] = TRUE
    action = grant_vote
    action_node = 2
    target_node = 2
  -> State: 3.3 <-
    node_state[2] = 1
    current_term[2] = 1
    timeout[2] = TRUE
    action = follower_timeout
    target_node = 0
  -> State: 3.4 <-
    current_term[0] = 1
    current_term[1] = 1
    rec_heart_term[0] = 1
    rec_heart_term[1] = 1
    known_leader[0] = 2
    known_leader[1] = 2
    known_leader[2] = 2
    action = leader_heartbeat
  -> State: 3.5 <-
    voted_for[1] = 2
    vote_granted[1][2] = TRUE
    rec_vote[2] = 1
    action = grant_vote
    action_node = 1
    target_node = 2
  -> State: 3.6 <-
    rec_vote[2] = 2
  -> State: 3.7 <-
    node_state[2] = 2
    action = candidate_wins
    action_node = 2
    target_node = 0







RUN 2 : 

-- invariant ((!((node_state[0] = 2 & node_state[1] = 2) & current_term[0] = current_term[1]) & !((node_state[0] = 2 & node_state[2] = 2) & current_term[0] = current_term[2])) & !((node_state[1] = 2 & node_state[2] = 2) & current_term[1] = current_term[2]))  is false
-- as demonstrated by the following execution sequence
Trace Description: AG alpha Counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    node_state[0] = 2
    node_state[1] = 0
    node_state[2] = 0
    current_term[0] = 0
    current_term[1] = 0
    current_term[2] = 0
    voted_for[0] = 0
    voted_for[1] = 0
    voted_for[2] = 0
    vote_granted[0][0] = FALSE
    vote_granted[0][1] = FALSE
    vote_granted[0][2] = FALSE
    vote_granted[1][0] = FALSE
    vote_granted[1][1] = FALSE
    vote_granted[1][2] = FALSE
    vote_granted[2][0] = FALSE
    vote_granted[2][1] = FALSE
    vote_granted[2][2] = FALSE
    timeout[0] = FALSE
    timeout[1] = FALSE
    timeout[2] = FALSE
    rec_vote[0] = 0
    rec_vote[1] = 0
    rec_vote[2] = 0
    heartbeat_sender = 0
    rec_heart_term[0] = 0
    rec_heart_term[1] = 0
    rec_heart_term[2] = 0
    node_active[0] = TRUE
    node_active[1] = TRUE
    node_active[2] = TRUE
    known_leader[0] = 0
    known_leader[1] = 0
    known_leader[2] = 0
    action = crash_node
    action_node = 0
    target_node = 0
    higher_term_val = 0
    majority = 2
    n = 3
  -> State: 1.2 <-
    vote_granted[0][1] = TRUE
    action = grant_vote
    target_node = 1
  -> State: 1.3 <-
    node_state[1] = 1
    current_term[1] = 1
    timeout[1] = TRUE
    action = follower_timeout
    action_node = 1
    target_node = 0
  -> State: 1.4 <-
    vote_granted[1][1] = TRUE
    rec_vote[1] = 1
    action = grant_vote
    target_node = 1
  -> State: 1.5 <-
    rec_vote[1] = 2
    action = request_vote
  -> State: 1.6 <-
    current_term[0] = 1
    current_term[2] = 1
    rec_heart_term[0] = 1
    rec_heart_term[2] = 1
    known_leader[0] = 1
    known_leader[1] = 1
    known_leader[2] = 1
    action = leader_heartbeat
  -> State: 1.7 <-
    node_state[1] = 2
    action = candidate_wins
    target_node = 0


    Initial State (1.1): Node 0 is leader with term 0
All nodes are initialized in term 0
Node 0 is leader, nodes 1 and 2 are followers
Vote Process (1.2-1.5):
Node 1 times out, becomes candidate in term 1
Node 1 collects votes (its own + another)
Critical Issue (1.6):
A heartbeat action updates all nodes' terms to 1
All nodes recognize node 1 as leader (known_leader[0], known_leader[1], known_leader[2] all set to 1)
BUT Node 0 doesn't step down from being a leader
Result (1.7):
Node 1 becomes leader (having received majority votes)
Now both Node 0 and Node 1 are leaders in term 1
